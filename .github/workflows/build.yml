# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Kotlin CI with Gradle

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-kotlin:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./kotlin

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Check style
      run: pip install pre-commit && pre-commit run --all
    - name: Setup gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Build with Gradle
      run: ./gradlew build
    - name: Run tests
      run: ./gradlew test
    - name: Move jar to python
      run: ./gradlew :copy-jar-to-python
    - name: Install python package
      working-directory: ./python
      run: uv sync
    - name: Run python tests
      working-directory: ./python
      run: uv run pytest --junitxml=../pytest.xml --cov-report=term-missing:skip-covered --cov=src test/ | tee ../pytest-coverage.txt
    - name: Pytest coverage comment
      if: ${{ github.actor != 'dependabot[bot]' }}
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
    - name: Run doctest
      working-directory: ./python
      run: uv run python -m doctest ../README.md
